% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FstColumnVector.R
\docType{class}
\name{FstColumnVector-class}
\alias{FstColumnVector-class}
\alias{FstColumnVector}
\alias{FstColumnVectors}
\title{FstColumnVector: A DelayedArray backend for fst (single column)}
\usage{
FstColumnVector(resource, column, type = NULL)

FstColumnVectors(resource)
}
\arguments{
\item{resource}{character: Path to fst file.}

\item{column}{character: Column to use from the fst file.}

\item{type}{character or NULL: resulting type of matrix. If NULL, default to logical < integer < double < complex < character.}
}
\value{
A FstColumnVector-object (A 1D FstArray) or a DataFrame of FstColumnVector-objects.
}
\description{
FstColumnVector allows you to use the fst package as a backend for
DelayedArrays, similarly to the default SQLDataFrame package. Only reading from fst files is supported.
}
\examples{
# Write the iris dataset to an fst
fst_fname <- tempfile(fileext=".fst")
export(iris, fst_fname)

# A column can be accessed as a single vector:
fcv <- FstColumnVector(fst_fname, column = "Petal.Length")

# The common use cases is making a DFrame of FstColumnVector-objects.
# This works much like a regular DFrame, except all calculations
# are handled via DelayedArray.
fcvs <- FstColumnVectors(fst_fname)

# Adding a new column will be another DelayedArray 1D array
fcvs$LengthProduct <- fcvs$Sepal.Length * fcvs$Petal.Length

# Subsetting causes all columns to become DelayedArray
fcvs <- subset(fcvs, Species == "virginica")

# Realizing the delayed calculations with as.vector()
fcvs$LengthProductRealized <- as.vector(fcvs$LengthProduct)
}
